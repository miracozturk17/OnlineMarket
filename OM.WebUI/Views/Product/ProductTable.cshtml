@using OM.Entities.EntityClass
@model  List<Product>
@{
    ViewBag.Title = "ProductTable";
}

<div>
    <form method="post" action="/Product/ProductTable">
        <input name="Arama" id="searchText" />
        <button name="Ara" type="button" id="searchButton">Ara</button>
    </form>
    <button name="Yeni" type="button" id="newButton">Yeni</button>
</div>

<h2>Ürün Tablosu</h2>
<div id="table">
    <table>
        <thead>
            <tr>
                <td>Ürün Adı</td>
                <td>Kategori</td>
                <td>Fiyat</td>
                <td>Açıklama</td>
                <td>Eylem</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var urun in Model)
            {
                <tr>
                    <td>@urun.Name</td>
                    <td>
                        @urun.Category.Name
                        @{
                            if (urun.Category != null)
                            {
                                <text> urun.Category.Name </text>
                            }
                            else
                            {
                                <text> - </text>
                            }
                        }
                    </td>
                    <td>@urun.UnitePrice</td>
                    <td>@urun.Description</td>
                    <td>
                        <button class="btn-info" id="editButton" data-id="@urun.Id">Düzenle</button>
                        <button class="btn-danger" id="deleteButton" data-id="@urun.Id">Sil</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script>
    $("#searchButton").click(function () {
        var search = $("#searchText").val();

        $.ajax({
            url: '/Product/ProductTable',
            data: {
                searchtextcontroller: search
            }
        })
            .done(function (response) {
                $("#table").html(response);
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Durum: " + textStatus + '/n' + "Hata: " + errorThrown);
            });
    });

    $("#newButton").click(function () {
        $.ajax({
            url: '/Product/Create'
        })
            .done(function (response) {
                $("#actionTable").html(response);
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Durum: " + textStatus + '/n' + "Hata: " + errorThrown);
            });
    });

    $("#editButton").click(function () {
        // debugger; JavaScript Debug
        $.ajax({
            url: '/Product/Edit',
            data: {
                Id: $(this).attr('data-id')
            }
        })
            .done(function (response) {
                $("#actionTable").html(response);
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Durum: " + textStatus + '/n' + "Hata: " + errorThrown);
            });
    });

    $("#deleteButton").click(function () {

        var confirmDelete = confirm("Ürünü silmek istediğinize emin misiniz ?");

        if (confirmDelete) {
            $.ajax({
                type: 'POST',
                url: '/Product/Delete',
                data: {
                    Id: $(this).attr('data-id')
                }
            })
                .done(function (response) {
                    $("#table").html(response);
                })
                .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                    alert("Durum: " + textStatus + '/n' + "Hata: " + errorThrown);
                });
        }
    });

    var products = [];
    $("#addToCard").click(function () {

        var productId = $(this).attr('data-id');

        products.push(productId);

        //Cookie içerisinde ki öğeleri '-' ile ayırdık
        $.cookie('CartProducts', products.join('-'), { path: '/' });

        alert("Ürün Sepete Eklendi");
    });

    function focusAction() {
        $('html,body').animate({
            scrollTop: $("#actionContainer").offset().top - 100
        }, 1000);
    }
</script>