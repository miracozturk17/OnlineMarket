@model OM.WebUI.Models.ProductSearchViewModel
@{
    ViewBag.Title = "ProductTable";
}
<script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.0/sweetalert.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.17.0/jquery.validate.min.js"></script>

<div>
    <form method="post">
        <div class="row">
            <div class="col-md-8">
                <div class="form-group">
                    <label>Ara</label>
                    <input class="form-control" id="searchText" name="Search" value="@Model.SearchTerm" />
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label>Eylem</label>
                    <div class="row">
                        <div class="col-md-4 pr-0">
                            <button class="btn btn-primary form-control" type="button" id="searchBtn">Ara</button>
                        </div>
                        <div class="col-md-4 pr-0">
                            <button class="btn btn-primary form-control" type="button" id="resetBtn">Yenile</button>
                        </div>
                        <div class="col-md-4 pr-0">
                            <button class="btn btn-primary form-control" type="button" id="newBtn">Yeni</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>
<div>
    <table id="ProductsTable" class="table table-striped">
        <thead>
            <tr>
                <th class="font-weight-bold">Ürün Adı</th>
                <th class="font-weight-bold">Kategori</th>
                <th class="font-weight-bold">Tutar</th>
                <th class="font-weight-bold wrap-td">Eylem</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Products != null && Model.Products.Count > 0)
            {

                foreach (var product in Model.Products)
                {
                    <tr>
                        <td>@product.Name</td>
                        <td>
                            @if (product.Category != null)
                            {
                                <text>@product.Category.Name</text>
                            }
                            else
                            {
                                <text>-</text>
                            }
                        </td>
                        <td>@product.UnitePrice</td>
                        <td class="wrap-td">
                            <button class="editBtn" data-id="@product.Id">Düzenle</button>
                            <button class="deleteBtn" data-id="@product.Id">Sil</button>
                            <button class="addtoCart" data-id="@product.Id">Sepete ekle</button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td class="text-danger" colspan="4">Ürün bulunamadı.</td>
                </tr>
            }
        </tbody>
    </table>
    <div>
        @if (Model.Pager != null && Model.Pager.TotalPages > 1)
        {

            if (Model.Pager.CurrentPage > 1)
            {
                <button class="pageButtons" data-pageno="1">İlk</button>
                <button class="pageButtons" data-pageno="@(Model.Pager.CurrentPage - 1)">Öncekiler</button>
            }

            for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
            {
                string activeClass = Model.Pager.CurrentPage == page ? "active bg-info" : string.Empty;

                <button class="@activeClass pageButtons" data-pageno="@page">@page</button>
            }

            if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
            {
                <button class="pageButtons" data-pageno="@(Model.Pager.CurrentPage + 1)">İleri</button>
                <button class="pageButtons" data-pageno="@Model.Pager.EndPage">Önceki</button>
            }
        }
    </div>
</div>
<script>

	$(".pageButtons").click(function () {
		$.ajax({
			url: '@Url.Action("ProductTable", "Product")',
			data: {
				pageNo : $(this).attr("data-pageno")
			}
		})
        .done(function (response) {
        	$("#tableContiner").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("Hata");
        });
	});

	$("#searchButton").click(function () {
		var searchValue = $("#searchText").val();

		$.ajax({
			url: '@Url.Action("ProductTable", "Product")',
			data: {
				search: searchValue
			}
		})
        .done(function (response) {
        	$("#tableContainer").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	alert("Hata");
        });
	});

	$("#resetButton").click(function () {
		var searchValue = '';

		$.ajax({
			url: '@Url.Action("ProductTable", "Product")',
			data: {
				search: searchValue
			}
		})
        .done(function (response) {
        	$("#tableContainer").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("Hata");
        });
	});

	$("#newButton").click(function () {
		$.ajax({
			url: '@Url.Action("Create", "Product")',
		})
        .done(function (response) {
        	$("#actionContainer").html(response);

        	focusAction("actionContainer");
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	alert("Hata");
        });
	});

	$(".editButton").click(function () {
		$.ajax({
			url: '@Url.Action("Edit", "Product")',
			data: {
				ID: $(this).attr('data-id')
			}
		})
        .done(function (response) {
        	$("#actionContainer").html(response);

        	focusAction("actionContainer");
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	alert("Hata");
        });
	});

	$(".deleteButton").click(function () {

		swal({
			title: "Confirm?",
			text: "Bu ürünü silmek istediginize emin misiniz?",
			icon: "warning",
			buttons: true,
			dangerMode: true,
		})
		.then((willDelete) => {
			if (willDelete) {
				$.ajax({
					type: 'POST',
					url: '@Url.Action("Delete", "Product")',
					data: {
						ID: $(this).attr('data-id')
					}
				})
				.done(function (response) {
					$("#tableContainer").html(response);

					swal("Kayıt basari ile silindi.", {
						icon: "success",
					});
				})
				.fail(function (XMLHttpRequest, textStatus, errorThrown) {
					alert("Hata");
				});

			}
		});
	});

	var products = [];
	$(".addtoCart").click(function () {
		var productId = $(this).attr('data-id');

		products.push(productId);

		$.cookie('CartProducts', products.join('-'), { path: '/' });

		alert("Ürün sepete eklendi.");
	});
</script>